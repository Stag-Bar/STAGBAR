package edu.nku.CSC440.stagbar.ui.user;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import edu.nku.CSC440.stagbar.dataaccess.data.PermissionLevel;
import edu.nku.CSC440.stagbar.dataaccess.data.User;

import java.awt.*;
import javax.swing.*;

public class UserListUI {
    private JPanel contentPane;
    private JRadioButton adminRadio;
    private JRadioButton guestRadio;
    private JLabel userLabel;
    private boolean iAmAdmin; //true if this user is Admin, otherwise false
    private User user;
    private int conversionCount;
    private boolean iHaveConverted;

    public UserListUI(User user) {
        if (null == user) throw new IllegalArgumentException("User cannot be null.");
        this.user = user;
        $$$setupUI$$$();
        userLabel.setText(user.getUsername());
        adminRadio.setText("Admin");
        guestRadio.setText("Guest");
        adminRadio.addItemListener(e -> adminRadioSelection());
        guestRadio.addItemListener(e -> guestRadioSelection());
        conversionCount = 0;
        iHaveConverted = false;
    }

    private void adminRadioSelection() {
        if (!iAmAdmin && adminRadio.isSelected()) { // if user is Guest and needs to convert to Admin status,
            guestRadio.setSelected(false); // immediately unselect the other button
            iAmAdmin = true; // Guest becomes Admin
            conversionCount++;
        }
    }

    private void guestRadioSelection() {
        if (iAmAdmin && guestRadio.isSelected()) { // if user is Admin and needs to convert to Guest status,
            adminRadio.setSelected(false); // immediately unselect the other button
            iAmAdmin = false; // Admin becomes Guest
            conversionCount++;
        }
    }

    public boolean getConversionStatus() { // Have I been converted to the other side?
        if ((conversionCount % 2) != 0) //if I have been converted even number of times, that means I have not converted yet
            iHaveConverted = true;
        return iHaveConverted;
    }

    public User getUser() {
        return user;
    }

    public JPanel getContentPane() {
        return contentPane;
    }

    private void createUIComponents() {
        adminRadio = new JRadioButton();
        guestRadio = new JRadioButton();
        if (user.getPermissionLevel().equals(PermissionLevel.ADMIN)) { //Admin RButton is selected by default if user is Admin
            adminRadio.setSelected(true);
            guestRadio.setSelected(false);
            iAmAdmin = true;
        } else if (user.getPermissionLevel().equals(PermissionLevel.GUEST)) { //Guest RButton is selected by default if user is Guest
            adminRadio.setSelected(false);
            guestRadio.setSelected(true);
            iAmAdmin = false;
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        userLabel = new JLabel();
        userLabel.setText("Label");
        contentPane.add(userLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        adminRadio.setText("RadioButton");
        contentPane.add(adminRadio, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        guestRadio.setText("RadioButton");
        contentPane.add(guestRadio, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
